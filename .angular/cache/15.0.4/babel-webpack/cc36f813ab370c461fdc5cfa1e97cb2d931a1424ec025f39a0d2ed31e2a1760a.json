{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageService {\n  constructor(storage) {\n    this.storage = storage;\n    this.url = '';\n  }\n}\nImageService.ɵfac = function ImageService_Factory(t) {\n  return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n};\nImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageService,\n  factory: ImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,OAAgB;IAAhB,YAAO,GAAPA,OAAO;IAF3B,QAAG,GAAW,EAAE;EAEuB;;AAH5BF,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAG,SAAZH,YAAY;EAAAI,YAFX;AAAM","names":["ImageService","constructor","storage","factory","providedIn"],"sourceRoot":"","sources":["D:\\Proyectos Programación\\PIEntrega\\FrontEnd\\src\\app\\service\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Storage, getDownloadURL, list, ref, uploadBytes} from '@angular/fire/storage';\r\nimport { async } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n  url: string = '';\r\n\r\n  constructor(private storage: Storage) {}\r\n/* \r\n  public uploadImg($event: any, name: string){\r\n    const file = $event.target.files[0]\r\n    const imgRef = ref(this.storage, `imagen/`+ name)\r\n    uploadBytes(imgRef, file)\r\n    .then(response =>{\r\n      this.getImages()\r\n    })\r\n    .catch(error => console.log(error)\r\n    )\r\n  }\r\n  getImages(){\r\n    const imagesRef = ref(this.storage, `imagen`)\r\n    list(imagesRef)\r\n    .then(async response => {\r\n      for (let item of response.items){\r\n        this.url = await getDownloadURL(item);\r\n        console.log(this.url);\r\n        \r\n      }\r\n    })\r\n    .catch(error => console.log(error))\r\n  } */\r\n  }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}