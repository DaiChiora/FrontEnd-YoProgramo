{"ast":null,"code":"import _asyncToGenerator from \"D:/Proyectos Programaci\\xF3n/PIEntrega/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getDownloadURL, list, ref, uploadBytes } from '@angular/fire/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageService {\n  constructor(storage) {\n    this.storage = storage;\n    this.url = '';\n  }\n  uploadImg($event, name) {\n    const file = $event.target.files[0];\n    const imgRef = ref(this.storage, `imagen/` + name);\n    uploadBytes(imgRef, file).then(response => {\n      this.getImages();\n    }).catch(error => console.log(error));\n  }\n  getImages() {\n    var _this = this;\n    const imagesRef = ref(this.storage, `imagen`);\n    list(imagesRef).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        for (let item of response.items) {\n          _this.url = yield getDownloadURL(item);\n          console.log(_this.url);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(error => console.log(error));\n  }\n}\nImageService.ɵfac = function ImageService_Factory(t) {\n  return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n};\nImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageService,\n  factory: ImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAAkBA,cAAc,EAAEC,IAAI,EAAEC,GAAG,EAAEC,WAAW,QAAO,uBAAuB;;;AAMtF,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,OAAgB;IAAhB,YAAO,GAAPA,OAAO;IAF3B,QAAG,GAAW,EAAE;EAEuB;EAEhCC,SAAS,CAACC,MAAW,EAAEC,IAAY;IACxC,MAAMC,IAAI,GAAGF,MAAM,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,MAAMC,MAAM,GAAGX,GAAG,CAAC,IAAI,CAACI,OAAO,EAAE,SAAS,GAAEG,IAAI,CAAC;IACjDN,WAAW,CAACU,MAAM,EAAEH,IAAI,CAAC,CACxBI,IAAI,CAACC,QAAQ,IAAG;MACf,IAAI,CAACC,SAAS,EAAE;IAClB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACjC;EACH;EACAF,SAAS;IAAA;IACP,MAAMK,SAAS,GAAGnB,GAAG,CAAC,IAAI,CAACI,OAAO,EAAE,QAAQ,CAAC;IAC7CL,IAAI,CAACoB,SAAS,CAAC,CACdP,IAAI;MAAA,6BAAC,WAAMC,QAAQ,EAAG;QACrB,KAAK,IAAIO,IAAI,IAAIP,QAAQ,CAACQ,KAAK,EAAC;UAC9B,KAAI,CAACC,GAAG,SAASxB,cAAc,CAACsB,IAAI,CAAC;UACrCH,OAAO,CAACC,GAAG,CAAC,KAAI,CAACI,GAAG,CAAC;;MAGzB,CAAC;MAAA;QAAA;MAAA;IAAA,IAAC,CACDP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACrC;;AA1BWd,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAqB,SAAZrB,YAAY;EAAAsB,YAFX;AAAM","names":["getDownloadURL","list","ref","uploadBytes","ImageService","constructor","storage","uploadImg","$event","name","file","target","files","imgRef","then","response","getImages","catch","error","console","log","imagesRef","item","items","url","factory","providedIn"],"sourceRoot":"","sources":["D:\\Proyectos Programación\\PIEntrega\\FrontEnd\\src\\app\\service\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Storage, getDownloadURL, list, ref, uploadBytes} from '@angular/fire/storage';\r\nimport { async } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n  url: string = '';\r\n\r\n  constructor(private storage: Storage) {}\r\n\r\n  public uploadImg($event: any, name: string){\r\n    const file = $event.target.files[0]\r\n    const imgRef = ref(this.storage, `imagen/`+ name)\r\n    uploadBytes(imgRef, file)\r\n    .then(response =>{\r\n      this.getImages()\r\n    })\r\n    .catch(error => console.log(error)\r\n    )\r\n  }\r\n  getImages(){\r\n    const imagesRef = ref(this.storage, `imagen`)\r\n    list(imagesRef)\r\n    .then(async response => {\r\n      for (let item of response.items){\r\n        this.url = await getDownloadURL(item);\r\n        console.log(this.url);\r\n        \r\n      }\r\n    })\r\n    .catch(error => console.log(error))\r\n  } \r\n  }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}